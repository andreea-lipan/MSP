field next: Ref
field elem: Int

predicate list(this: Ref) {
    acc(this.elem) && acc(this.next) && 
    (this.next != null ==> list(this.next))
}

method head(this: Ref) returns (res: Int)
  requires list(this)
  ensures  list(this)
{
    unfold list(this)
    res := this.elem
    fold list(this)
}

method append(this: Ref, e: Int) 
    requires list(this)
    ensures  list(this)
{
    unfold list(this)
    if(this.next == null) {
        var n: Ref
        n := new(*)
        n.next := null
        this.elem := e
        this.next := n
        fold list(this.next)
    } else {
        append(this.next, e) // poti sa faci append de this.next pt ca implicatia din predicat e true
                            // aka this.next != null
    }
    fold list(this)
}